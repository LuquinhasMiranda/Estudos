<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{FD157C27-560E-3435-AE09-F7B2B816911D}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4" "-BE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build" --check-stamp-file "E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.21\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\WriteBasicConfigVersionFile.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeRCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeSystem.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\cmake_uninstall.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3.pc.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3Config.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4" "-BE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build" --check-stamp-file "E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.21\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\WriteBasicConfigVersionFile.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeRCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeSystem.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\cmake_uninstall.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3.pc.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3Config.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4" "-BE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build" --check-stamp-file "E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.21\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\WriteBasicConfigVersionFile.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeRCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeSystem.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\cmake_uninstall.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3.pc.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3Config.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4" "-BE:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build" --check-stamp-file "E:/GitHub/Estudos/OpenGL (C++)/glfw-3.3.4/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.21\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Compiler\MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindDoxygen.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.21\Modules\WriteBasicConfigVersionFile.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeRCCompiler.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\3.21.2\CMakeSystem.cmake;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\cmake_uninstall.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3.pc.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw3Config.cmake.in;E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\ZERO_CHECK.vcxproj">
      <Project>{054FB747-A754-3D63-928C-FCC2A51DC17B}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\boing.vcxproj">
      <Project>{58A23FDC-572B-3608-87F0-4D4A5CCE3925}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\clipboard.vcxproj">
      <Project>{8AEC507C-BCEC-3C65-9C6B-A1379CB4BBEA}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\cursor.vcxproj">
      <Project>{47FA0718-8F49-3845-8163-0252455A4DE4}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\empty.vcxproj">
      <Project>{3C37051A-F1A5-3F0D-91C2-C8BB171D46E5}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\events.vcxproj">
      <Project>{043B0DD6-CCB5-3751-A26C-8A7F66E1B4A2}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\gamma.vcxproj">
      <Project>{4EDEAE27-4F42-3D98-A6D1-773474FC8DB1}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\gears.vcxproj">
      <Project>{26F392F0-0F0A-36C7-AB72-60976C167C40}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\src\glfw.vcxproj">
      <Project>{350C4CF4-F2F3-3989-BB68-41B769ABC23F}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\glfwinfo.vcxproj">
      <Project>{4AEC71F2-6553-3E74-82AD-0B0EF144B04E}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\heightmap.vcxproj">
      <Project>{D77B86E7-D064-349B-B934-429716058238}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\icon.vcxproj">
      <Project>{4FC167FA-6B5D-31AE-A59E-11B582CF56D7}</Project>
      <Name>icon</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\iconify.vcxproj">
      <Project>{775BEDE4-C222-399D-9247-2CB3CA26A0C3}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\inputlag.vcxproj">
      <Project>{3BCDBF2C-D90A-324E-A036-902B239ED603}</Project>
      <Name>inputlag</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\joysticks.vcxproj">
      <Project>{7986C48E-02D2-3DB5-982A-FD09966BF353}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\monitors.vcxproj">
      <Project>{2BD9A70F-3BDD-30B3-9E27-4DC9974B1B23}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\msaa.vcxproj">
      <Project>{C923F9C7-60AD-3E7B-A1CA-75685512A7F1}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\offscreen.vcxproj">
      <Project>{247FB55D-BF4A-35EB-8B15-FA0DCA1927FE}</Project>
      <Name>offscreen</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\opacity.vcxproj">
      <Project>{4935EBA9-AF9C-3E5F-BE6E-E6630A4B9C57}</Project>
      <Name>opacity</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\particles.vcxproj">
      <Project>{4449AC5C-8381-301F-BFC2-FC10D26111EE}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\reopen.vcxproj">
      <Project>{F2B07E44-9363-331B-9923-7D1554E48F64}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\sharing.vcxproj">
      <Project>{6AFD6A9F-FA70-3FC7-8D3E-5A7669786FA9}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\simple.vcxproj">
      <Project>{C24D0D53-5B55-330A-8B73-AA7A4D65C7A8}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\splitview.vcxproj">
      <Project>{CD847E2C-93D2-3C7D-98E9-C8F722CAF8F8}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\tearing.vcxproj">
      <Project>{1590737A-F23D-3CC1-A891-E022672B7624}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\threads.vcxproj">
      <Project>{5B3BA058-CD6D-3E5C-8C8F-D168C2C9B472}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\timeout.vcxproj">
      <Project>{BC75143F-5D7E-3E0B-9620-91B6DBF6F7F9}</Project>
      <Name>timeout</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\title.vcxproj">
      <Project>{934EBDDE-536D-314D-A9D9-4C877B1CA85D}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\triangle-vulkan.vcxproj">
      <Project>{C2A46391-C8E8-3FC6-97FB-9FC95D8706F5}</Project>
      <Name>triangle-vulkan</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\examples\wave.vcxproj">
      <Project>{B36C35FA-C93A-39AA-B2C8-D6F6828D6452}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="E:\GitHub\Estudos\OpenGL (C++)\glfw-3.3.4\build\tests\windows.vcxproj">
      <Project>{369BAC7E-3D67-3AF0-9276-28B79A5FB75B}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>